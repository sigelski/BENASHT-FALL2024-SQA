#!/bin/bash

### COMP-5710 Final Project ###
### 5a - Create a Git Hook that will run and report all security weaknesses in the project in a CSV file whenever a Python file is changed and committed. (20%)

REPORT="security_vulnerability_report.csv"

TEMP=$(mktemp)

# Gets the list of all staged Python files if there are any (should be).
git diff --cached --name-only --diff-filter=ACMR | grep -i '\.py$' > "$TEMP"

echo "Files to scan:" 
cat "$TEMP"

# Check if there are any Python files to scan
if [ -s "$TEMP" ]; then
    echo "Security scan running."

    echo "filename,test_name,test_id,issue_severity,issue_confidence,issue_cwe,issue_text,line_number,line_range,,,more_info" > "$REPORT"

    # Runs Bandit on each staged Python file, and then appends the results to the REPORT.
    while IFS= read -r file
    do
        # Extract the staged version of the file to a temporary file
        git show ":$file" > "$TEMP" 2>/dev/null

        if [ $? -eq 0 ] && [ -s "$TEMP" ]; then
            bandit -f csv -o temp_sec.csv "$TEMP"
            sed "s|^|$file,|" temp_sec.csv | tail -n +2 >> "$REPORT"
        else
            echo "Failed to retrieve staged version of $file"
        fi
    done < "$TEMP"

    rm temp_sec.csv
    rm "$TEMP"

    if [ $(wc -l < "$REPORT") -gt 1 ]; then
        echo "Security issues detected by Bandit. See $REPORT for details."
    else
        echo "No security issues found by Bandit."
        rm "$REPORT"
    fi
else
    echo "No Python files staged for commit. Skipping Bandit scan."
fi

rm "$TEMP"

exit 0